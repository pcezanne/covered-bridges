"""Simple travelling salesman problem between cities."""

from ortools.constraint_solver import routing_enums_pb2
from ortools.constraint_solver import pywrapcp


metersToMiles = 1609.344

places = [
"Ashuelot Bridge, Winchester", "Coombs Bridge, Winchester,", "Slate Bridge, Swanzey", "Denman Thompson Bridge, Swanzey", "Sawyer's Crossing, Swanzey", "Carleton Bridge, Swanzey", "County Bridge, Hancock", "Rowell's Bridge, Hopkinton", "Railroad Bridge, Hopkinton", "Dalton Bridge, Warner", "Waterloo Bridge, Warner", "Bement Bridge, Bradford", "Keniston Bridge, Andover", "Cilleyville Bridge, Andover", "Corbin Bridge, Newport", "Mcdermott Bridge, Langdon", "Prentiss Bridge, Langdon", "Cornish-Windsor Bridge, Cornish", "Blacksmith Shop Bridge, Cornish", "Dingleton Hill Bridge, Cornish", "Blow-Me-Down Bridge, Cornish", "Meriden Bridge, Plainfield", "Edgell Bridge, Lyme", "Bath-Haverhill Bridge, Bath", "Bath Bridge, Bath", "Swiftwater Bridge, Bath", "Mt.Orne Bridge, Lancaster", "Mechanic Street Bridge, Lancaster", "Groveton Bridge, Northumberland", "Columbia Bridge, Columbia", "Pittsburg-Clarksville Bridge, Pittsburg", "Happy Corner Bridge, Pittsburg", "River Road Bridge, Pittsburg", "Stark Bridge, Stark", "Sentinel Pine Bridge, Lincoln", "Blair Bridge, Campton", "Turkey Jim's Bridge, Campton", "Bump Bridge, Campton", "Smith Bridge, Plymouth", "Durgin Bridge, Sandwich", "Whittier Bridge, Ossipee", "Swift River Bridge", "Saco River Bridge", "Albany Bridge, Albany", "Bartlett Bridge, Bartlett", "Honeymoon Bridge, Jackson", "Pier Bridge, Newport", "Wright's Bridge, Newport", "Sulphite Bridge, Franklin", "Heniker Bridge, Heniker", "Clark's Bridge, North Woodstock", "Squam Bridge, Ashland", "Packard Hill Bridge, Lebanon", 
]


coords = [
"42.777500, -72.423222", "42.838028, -72.360639", "42.847306, -72.340361", "42.871556, -72.327500", "42.886889, -72.287389", "42.854583, -72.273972", "42.955639, -71.935667", "43.192167, -71.748306", "43.222778, -71.712667", "43.276889, -71.811306", "43.288333, -71.856000", "43.264361, -71.952972", "43.434861, -71.836306", "43.430417, -71.869389", "43.390972, -72.194611", "43.170028, -72.345833", "43.153083, -72.393667", "43.472972, -72.383333", "43.462750, -72.354222", "43.464556, -72.369250", "43.517389, -72.374306", "43.553361, -72.265444", "43.867556, -72.165111", "44.154000, -72.035611", "44.166889, -71.965833", "44.134333, -71.950583", "44.460556, -71.653472", "44.460297, -71.653725", "44.595823, -71.511325", "44.852917, -71.551278", "45.054750, -71.406833", "45.084278, -71.313389", "45.072222, -71.305972", "44.600722, -71.407917", "44.097278, -71.681139", "43.810278, -71.666639", "43.853333, -71.657917", "43.814722, -71.621361", "43.775667, -71.739694", "43.856139, -71.364222", "43.821556, -71.212306", "43.984389, -71.119472", "43.983250, -71.116417", "44.005722, -71.241444", "44.094472, -71.203444", "44.142000, -71.185472", "43.360167, -72.245722", "43.358528, -72.253778", "43.445333, -71.643444", "43.177583, -71.822056", "44.049528, -71.687472", "43.718333, -71.618250", "43.639056, -72.222167", 
]


def create_data_model():
    """Stores the data for the problem."""
    data = {}
    data['distance_matrix'] = [
	[0, 12178, 13595, 16909, 21082, 22076, 65713, 88747, 94863, 105350, 103790, 94812, 114776, 111417, 85507, 54992, 52002, 98438, 102618, 100807, 104412, 116757, 151622, 189494, 197048, 198632, 252549, 252583, 274831, 307793, 329762, 340331, 343321, 285457, 219179, 184816, 191326, 190104, 184433, 207398, 211927, 234465, 234444, 258949, 253622, 255293, 86887, 97704, 144003, 81921, 216349, 175550, 129464, ],
	[12178, 0, 2254, 5568, 9741, 10735, 54372, 77406, 83522, 94009, 92449, 83471, 103435, 100076, 74166, 43651, 50005, 88481, 92661, 90851, 94376, 106800, 141665, 179537, 187091, 188675, 242593, 242626, 264874, 297836, 319806, 330374, 333364, 275500, 207838, 173475, 179985, 178763, 173092, 196057, 200586, 223124, 223103, 247608, 242281, 243951, 75546, 76366, 117314, 70580, 205008, 164209, 119508, ],
	[13595, 2254, 0, 3578, 7751, 8889, 52382, 75416, 81532, 92019, 90459, 81481, 101445, 98086, 72176, 41661, 48014, 86491, 90671, 88861, 92386, 104810, 139675, 177547, 185101, 186685, 240602, 240636, 262884, 295846, 317816, 328384, 331374, 273510, 205848, 171485, 177995, 176773, 171102, 194067, 198596, 221134, 221113, 245618, 240291, 241961, 73556, 74376, 115324, 68590, 203018, 162219, 117518, ],
	[16909, 5568, 3578, 0, 5179, 7327, 49810, 72844, 78960, 89447, 87887, 78909, 98873, 95514, 69604, 39089, 38351, 83919, 88099, 86288, 89814, 102238, 137103, 174975, 182529, 184113, 238030, 238064, 260312, 293274, 315244, 325812, 328802, 270938, 203275, 168913, 175423, 174201, 168530, 191494, 196024, 218562, 218541, 243046, 237719, 239389, 70984, 71804, 112752, 66018, 200446, 159647, 114945, ],
	[21082, 9741, 7751, 5179, 0, 4319, 47097, 70131, 76247, 86734, 85174, 76196, 96160, 92801, 66891, 36376, 35638, 81206, 85386, 83575, 87101, 99525, 134390, 172262, 179816, 181400, 235317, 235351, 257599, 290561, 312531, 323099, 326089, 268225, 200562, 166200, 172710, 171488, 165817, 188781, 193311, 215849, 215828, 240333, 235006, 236676, 68271, 69091, 110039, 63305, 197733, 156934, 112232, ],
	[22076, 10735, 8889, 7327, 4319, 0, 43017, 74449, 80565, 91052, 89493, 80514, 100478, 97120, 71209, 40695, 47048, 85524, 89705, 87894, 91419, 103844, 138709, 176581, 184135, 185718, 239636, 239669, 261918, 294879, 316849, 327418, 330408, 272544, 204881, 170518, 177029, 175806, 170135, 193100, 197629, 220168, 220147, 244651, 239325, 240995, 72589, 73409, 114358, 67624, 202052, 161252, 116551, ],
	[65713, 54372, 52382, 49810, 47097, 43017, 0, 39508, 45624, 56152, 54589, 45611, 72623, 69268, 62966, 49637, 53121, 83175, 83992, 84053, 88936, 90888, 145860, 183732, 191286, 192778, 226226, 226262, 236781, 272149, 299464, 309297, 312287, 247407, 169940, 135645, 142155, 140933, 135262, 158159, 162688, 185227, 185206, 209757, 204384, 206054, 64355, 65175, 94832, 32682, 167178, 126311, 103152, ],
	[88747, 77406, 75416, 72844, 70131, 74449, 39508, 0, 7789, 18554, 22917, 21907, 47256, 43901, 48506, 69068, 72552, 73259, 74042, 74137, 100808, 85103, 120514, 158386, 161941, 156655, 190104, 190139, 200658, 236026, 263341, 273174, 276164, 211284, 133922, 99522, 106032, 104810, 99139, 122200, 126730, 149268, 149247, 173655, 168425, 170095, 50668, 51488, 58709, 9134, 131055, 90353, 77806, ],
	[94863, 83522, 81532, 78960, 76247, 80565, 45624, 7789, 0, 11640, 16254, 25477, 31126, 36837, 59444, 75185, 78668, 99896, 91457, 93290, 94011, 78271, 113449, 151321, 158875, 154488, 187937, 187972, 198492, 233860, 261174, 271008, 273997, 209118, 131756, 97355, 103866, 102644, 96972, 120079, 124608, 147319, 147299, 171488, 166476, 168147, 54261, 55081, 32307, 15251, 128889, 88404, 70741, ],
	[105350, 94009, 92019, 89447, 86734, 91052, 56152, 18554, 11640, 0, 4367, 13590, 28649, 25294, 40196, 68584, 76095, 88353, 79783, 81617, 82303, 66598, 101906, 139778, 147332, 148916, 164142, 164177, 174733, 210101, 237416, 247249, 250239, 185359, 107420, 73294, 80107, 78534, 73214, 95639, 100168, 122706, 122685, 147237, 176880, 143534, 42358, 43178, 28556, 25778, 104876, 63791, 59198, ],
	[103790, 92449, 90459, 87887, 85174, 89493, 54589, 22917, 16254, 4367, 0, 9764, 27697, 24339, 36363, 64753, 72269, 61116, 61724, 61994, 81216, 65511, 101285, 139157, 146711, 148295, 203193, 203228, 213747, 249115, 279425, 289994, 292984, 224373, 146799, 112611, 119121, 117899, 112228, 135018, 139548, 162086, 162065, 186616, 181243, 182913, 38525, 39345, 31991, 24223, 144144, 103171, 58577, ],
	[94812, 83471, 81481, 78909, 76196, 80514, 45611, 21907, 25477, 13590, 9764, 0, 27745, 24386, 26661, 55051, 62567, 51413, 52021, 52291, 57231, 62153, 98485, 136977, 144224, 145808, 175381, 175416, 185936, 225784, 277029, 287598, 290587, 201042, 118883, 84758, 91619, 89997, 76846, 107087, 111616, 134171, 134150, 158700, 153328, 154999, 28823, 29643, 41215, 15244, 116339, 75254, 55322, ],
	[114776, 103435, 101445, 98873, 96160, 100478, 72623, 47256, 31126, 28649, 27697, 27745, 0, 3347, 41586, 71837, 77104, 82038, 73598, 75432, 76153, 60413, 95591, 133463, 141017, 118391, 151840, 151875, 162395, 197763, 225077, 234911, 237900, 173021, 95276, 61151, 67769, 66391, 53239, 83497, 88026, 110565, 110544, 135093, 129722, 131392, 43246, 44066, 20079, 42257, 92733, 51648, 52883, ],
	[111417, 100076, 98086, 95514, 92801, 97120, 69268, 43901, 36837, 25294, 24339, 24386, 3347, 0, 38228, 68479, 73749, 78680, 70240, 72074, 72794, 57055, 92233, 130105, 137658, 117538, 150987, 151022, 161541, 196910, 224224, 234057, 237047, 172167, 94431, 60306, 66915, 65546, 52394, 82652, 87182, 109720, 109699, 134248, 128877, 130547, 39890, 40710, 23044, 38902, 91888, 50803, 49525, ],
	[85507, 74166, 72176, 69604, 66891, 71209, 62966, 48506, 59444, 40196, 36363, 26661, 41586, 38228, 0, 37080, 46277, 31026, 31611, 31904, 36821, 42756, 78095, 115967, 123521, 125105, 179022, 179055, 201304, 234266, 256235, 266804, 269794, 211930, 132696, 98571, 105151, 103811, 91320, 120917, 125447, 147985, 147964, 172513, 167142, 168812, 10487, 11307, 61280, 41843, 130153, 89068, 35387, ],
	[54992, 43651, 41661, 39089, 36376, 40695, 49637, 69068, 75185, 68584, 64753, 55051, 71837, 68479, 37080, 0, 7849, 44019, 45175, 43365, 49741, 54072, 97204, 135076, 142630, 144214, 198043, 198077, 220292, 253375, 275344, 285913, 288903, 230918, 169937, 165061, 135676, 170349, 133957, 151161, 155690, 178229, 178208, 205415, 255611, 262296, 35893, 35073, 91531, 62243, 159799, 155872, 75046, ],
	[52002, 50005, 48014, 38351, 35638, 47048, 53121, 72552, 78668, 76095, 72269, 62567, 77104, 73749, 46277, 7849, 0, 40870, 42935, 41124, 46566, 51831, 94055, 131927, 139481, 141064, 194868, 194901, 217116, 250225, 272195, 282764, 285754, 227742, 162215, 139151, 146013, 144391, 130808, 191203, 195732, 218271, 218250, 202239, 252435, 259120, 37259, 36439, 99086, 65726, 156623, 159355, 71897, ],
	[98438, 88481, 86491, 83919, 81206, 85524, 83175, 73259, 99896, 88353, 61116, 51413, 82038, 78680, 31026, 44019, 40870, 0, 3758, 1947, 5761, 19388, 54825, 92696, 100250, 101834, 155752, 155785, 178033, 210995, 232965, 243534, 246523, 188659, 123174, 96995, 103505, 102283, 88569, 132141, 144619, 167671, 167650, 163199, 213240, 219948, 23749, 22929, 101732, 66596, 117583, 103303, 30308, ],
	[102618, 92661, 90671, 88099, 85386, 89705, 83992, 74042, 91457, 79783, 61724, 52021, 73598, 70240, 31611, 45175, 42935, 3758, 0, 1834, 9519, 15631, 58582, 96454, 104008, 105592, 159509, 159543, 181791, 214753, 236723, 247291, 250281, 192417, 127775, 93583, 100093, 98871, 85157, 128322, 141207, 164259, 164238, 167716, 216997, 223705, 24566, 23746, 93292, 67205, 125065, 99892, 29369, ],
	[100807, 90851, 88861, 86288, 83575, 87894, 84053, 74137, 93290, 81617, 61994, 52291, 75432, 72074, 31904, 43365, 41124, 1947, 1834, 0, 7709, 17464, 56772, 94644, 102197, 103781, 157699, 157732, 179981, 212942, 234912, 245481, 248470, 190607, 125122, 95417, 101927, 100705, 86991, 130155, 143041, 166093, 166072, 165146, 215187, 221895, 24628, 23808, 95126, 67474, 119530, 101726, 31203, ],
	[104412, 94376, 92386, 89814, 87101, 91419, 88936, 100808, 94011, 82303, 81216, 57231, 76153, 72794, 36821, 49741, 46566, 5761, 9519, 7709, 0, 13989, 49512, 87384, 94938, 96522, 150439, 150473, 172721, 205683, 227653, 238221, 241211, 183347, 125509, 91109, 97619, 96397, 82683, 126256, 138733, 161785, 161764, 161611, 207927, 214635, 29511, 28691, 95846, 72415, 112624, 97418, 24387, ],
	[116757, 106800, 104810, 102238, 99525, 103844, 90888, 85103, 78271, 66598, 65511, 62153, 60413, 57055, 42756, 54072, 51831, 19388, 15631, 17464, 13989, 0, 46998, 84869, 92423, 94007, 147925, 147958, 170206, 203168, 225138, 235707, 238696, 180832, 114590, 80398, 86908, 85686, 71972, 115137, 127598, 150136, 150115, 154406, 205413, 212121, 31462, 30642, 80107, 80079, 111931, 86707, 16184, ],
	[151622, 141665, 139675, 137103, 134390, 138709, 145860, 120514, 113449, 101906, 101285, 98485, 95591, 92233, 78095, 97204, 94055, 54825, 58582, 56772, 49512, 46998, 0, 42013, 41870, 39949, 104971, 105004, 127219, 160312, 182282, 192851, 195840, 137845, 67989, 57805, 64315, 63093, 49379, 92540, 105001, 119768, 119747, 108013, 126717, 133402, 79731, 78911, 93210, 115494, 62397, 64113, 33715, ],
	[189494, 179537, 177547, 174975, 172262, 176581, 183732, 158386, 151321, 139778, 139157, 136977, 133463, 130105, 115967, 135076, 131927, 92696, 96454, 94644, 87384, 84869, 42013, 0, 7970, 9554, 57130, 57165, 80491, 129639, 151609, 162178, 165167, 91117, 46672, 67262, 63568, 70379, 63090, 111379, 123840, 98451, 98430, 86696, 99489, 106175, 117603, 116783, 112049, 153366, 41080, 82913, 81733, ],
	[197048, 187091, 185101, 182529, 179816, 184135, 191286, 161941, 158875, 147332, 146711, 144224, 141017, 137658, 123521, 142630, 139481, 100250, 104008, 102197, 94938, 92423, 41870, 7970, 0, 5588, 49274, 49309, 72576, 107945, 135034, 144868, 147857, 83202, 42705, 63283, 59602, 66400, 72426, 107400, 119861, 94484, 94463, 82729, 91646, 98332, 125157, 124337, 108070, 160920, 37114, 78947, 89287, ],
	[198632, 188675, 186685, 184113, 181400, 185718, 192778, 156655, 154488, 148916, 148295, 145808, 118391, 117538, 125105, 144214, 141064, 101834, 105592, 103781, 96522, 94007, 39949, 9554, 5588, 0, 53477, 53512, 76779, 112147, 139462, 149295, 152284, 87405, 37419, 57997, 54316, 61114, 67140, 102114, 114575, 89198, 89177, 77443, 92031, 98717, 126740, 125920, 102784, 162392, 31828, 73661, 90871, ],
	[252549, 242593, 240602, 238030, 235317, 239636, 226226, 190104, 187937, 164142, 203193, 175381, 151840, 150987, 179022, 198043, 194868, 155752, 159509, 157699, 150439, 147925, 104971, 57130, 49274, 53477, 0, 33, 23259, 58627, 85941, 95478, 98468, 33885, 56939, 91370, 87188, 94520, 100589, 135371, 116813, 89301, 89707, 101313, 71431, 78117, 180658, 179838, 136179, 195841, 62261, 106533, 144788, ],
	[252583, 242626, 240636, 238064, 235351, 239669, 226262, 190139, 187972, 164177, 203228, 175416, 151875, 151022, 179055, 198077, 194901, 155785, 159543, 157732, 150473, 147958, 105004, 57165, 49309, 53512, 33, 0, 23292, 58660, 85975, 95512, 98501, 33918, 56974, 91406, 87224, 94555, 100624, 135406, 116848, 89336, 89742, 101348, 71466, 78152, 180691, 179871, 136215, 195876, 62296, 106569, 144822, ],
	[274831, 264874, 262884, 260312, 257599, 261918, 236781, 200658, 198492, 174733, 213747, 185936, 162395, 161541, 201304, 220292, 217116, 178033, 181791, 179981, 172721, 170206, 127219, 80491, 72576, 76779, 23259, 23292, 0, 35531, 62845, 72679, 75668, 10901, 67493, 102000, 98637, 105117, 111144, 146117, 132423, 104907, 103290, 116821, 87037, 82620, 202940, 202120, 146787, 206396, 72816, 120240, 167070, ],
	[307793, 297836, 295846, 293274, 290561, 294879, 272149, 236026, 233860, 210101, 249115, 225784, 197763, 196910, 234266, 253375, 250225, 210995, 214753, 212942, 205683, 203168, 160312, 129639, 107945, 112147, 58627, 58660, 35531, 0, 27944, 37777, 40767, 46641, 102862, 137368, 134006, 140486, 146512, 181485, 167792, 140276, 140681, 151129, 122406, 118359, 235901, 235081, 182156, 241764, 108184, 155608, 200032, ],
	[329762, 319806, 317816, 315244, 312531, 316849, 299464, 263341, 261174, 237416, 279425, 277029, 225077, 224224, 256235, 275344, 272195, 232965, 236723, 234912, 227653, 225138, 182282, 151609, 135034, 139462, 85941, 85975, 62845, 27944, 0, 10724, 13714, 73955, 130176, 164683, 161320, 167800, 173826, 208800, 195106, 167590, 167995, 179589, 149720, 145673, 257871, 257051, 209470, 269078, 135499, 182923, 222001, ],
	[340331, 330374, 328384, 325812, 323099, 327418, 309297, 273174, 271008, 247249, 289994, 287598, 234911, 234057, 266804, 285913, 282764, 243534, 247291, 245481, 238221, 235707, 192851, 162178, 144868, 149295, 95478, 95512, 72679, 37777, 10724, 0, 2659, 83788, 140009, 174516, 171153, 177633, 183659, 218633, 204939, 177423, 177829, 189422, 159553, 155507, 268440, 267620, 219303, 278912, 145332, 192756, 232570, ],
	[343321, 333364, 331374, 328802, 326089, 330408, 312287, 276164, 273997, 250239, 292984, 290587, 237900, 237047, 269794, 288903, 285754, 246523, 250281, 248470, 241211, 238696, 195840, 165167, 147857, 152284, 98468, 98501, 75668, 40767, 13714, 2659, 0, 86778, 142999, 177506, 174143, 180623, 186649, 221623, 207929, 180413, 180818, 192412, 162543, 158496, 271430, 270610, 222293, 281901, 148321, 195746, 235560, ],
	[285457, 275500, 273510, 270938, 268225, 272544, 247407, 211284, 209118, 185359, 224373, 201042, 173021, 172167, 211930, 230918, 227742, 188659, 192417, 190607, 183347, 180832, 137845, 91117, 83202, 87405, 33885, 33918, 10901, 46641, 73955, 83788, 86778, 0, 78119, 112626, 109263, 115743, 121770, 125761, 119875, 94935, 92459, 104375, 78216, 71789, 213566, 212746, 157413, 217022, 83442, 130866, 177696, ],
	[219179, 207838, 205848, 203275, 200562, 204881, 169940, 133922, 131756, 107420, 146799, 118883, 95276, 94431, 132696, 169937, 162215, 123174, 127775, 125122, 125509, 114590, 67989, 46672, 42705, 37419, 56939, 56974, 67493, 102862, 130176, 140009, 142999, 78119, 0, 34648, 30466, 37798, 44051, 78649, 91127, 65266, 65245, 53511, 72507, 79215, 134330, 135150, 79457, 139566, 5582, 49811, 101413, ],
	[184816, 173475, 171485, 168913, 166200, 170518, 135645, 99522, 97355, 73294, 112611, 84758, 61151, 60306, 98571, 165061, 139151, 96995, 93583, 95417, 91109, 80398, 57805, 67262, 63283, 57997, 91370, 91406, 102000, 137368, 164683, 174516, 177506, 112626, 34648, 0, 5731, 5240, 9925, 44524, 57001, 86220, 86199, 74465, 106804, 113512, 100205, 101025, 45332, 105259, 32105, 15686, 67225, ],
	[191326, 179985, 177995, 175423, 172710, 177029, 142155, 106032, 103866, 80107, 119121, 91619, 67769, 66915, 105151, 135676, 146013, 103505, 100093, 101927, 97619, 86908, 64315, 63568, 59602, 54316, 87188, 87224, 98637, 134006, 161320, 171153, 174143, 109263, 30466, 5731, 0, 10512, 16518, 51385, 63863, 82038, 82017, 70283, 102622, 109330, 106813, 107633, 52161, 111770, 27923, 22547, 73735, ],
	[190104, 178763, 176773, 174201, 171488, 175806, 140933, 104810, 102644, 78534, 117899, 89997, 66391, 65546, 103811, 170349, 144391, 102283, 98871, 100705, 96397, 85686, 63093, 70379, 66400, 61114, 94520, 94555, 105117, 140486, 167800, 177633, 180623, 115743, 37798, 5240, 10512, 0, 15165, 48109, 60586, 89370, 89349, 77615, 109954, 116662, 105445, 106265, 50572, 110548, 35254, 19271, 72513, ],
	[184433, 173092, 171102, 168530, 165817, 170135, 135262, 99139, 96972, 73214, 112228, 76846, 53239, 52394, 91320, 133957, 130808, 88569, 85157, 86991, 82683, 71972, 49379, 63090, 72426, 67140, 100589, 100624, 111144, 146512, 173826, 183659, 186649, 121770, 44051, 9925, 16518, 15165, 0, 44598, 57059, 79597, 79576, 83867, 116207, 122915, 92293, 93113, 45268, 104876, 41507, 16316, 58799, ],
	[207398, 196057, 194067, 191494, 188781, 193100, 158159, 122200, 120079, 95639, 135018, 107087, 83497, 82652, 120917, 151161, 191203, 132141, 128322, 130155, 126256, 115137, 92540, 111379, 107400, 102114, 135371, 135406, 146117, 181485, 208800, 218633, 221623, 125761, 78649, 44524, 51385, 48109, 44598, 0, 14858, 33386, 33365, 41673, 52543, 54231, 122551, 123371, 67676, 127785, 76105, 31590, 101960, ],
	[211927, 200586, 198596, 196024, 193311, 197629, 162688, 126730, 124608, 100168, 139548, 111616, 88026, 87182, 125447, 155690, 195732, 144619, 141207, 143041, 138733, 127598, 105001, 123840, 119861, 114575, 116813, 116848, 132423, 167792, 195106, 204939, 207929, 119875, 91127, 57001, 63863, 60586, 57059, 14858, 0, 27500, 27479, 35786, 46657, 48343, 127080, 127900, 72206, 132315, 88583, 44066, 114421, ],
	[234465, 223124, 221134, 218562, 215849, 220168, 185227, 149268, 147319, 122706, 162086, 134171, 110565, 109720, 147985, 178229, 218271, 167671, 164259, 166093, 161785, 150136, 119768, 98451, 94484, 89198, 89301, 89336, 104907, 140276, 167590, 177423, 180413, 94935, 65266, 86220, 82038, 89370, 79597, 33386, 27500, 0, 405, 11999, 19157, 23386, 149618, 150438, 94744, 154853, 59675, 66604, 136959, ],
	[234444, 223103, 221113, 218541, 215828, 220147, 185206, 149247, 147299, 122685, 162065, 134150, 110544, 109699, 147964, 178208, 218250, 167650, 164238, 166072, 161764, 150115, 119747, 98430, 94463, 89177, 89707, 89742, 103290, 140681, 167995, 177829, 180818, 92459, 65245, 86199, 82017, 89349, 79576, 33365, 27479, 405, 0, 11978, 19562, 20911, 149598, 150418, 94723, 154832, 59654, 66583, 136938, ],
	[258949, 247608, 245618, 243046, 240333, 244651, 209757, 173655, 171488, 147237, 186616, 158700, 135093, 134248, 172513, 205415, 202239, 163199, 167716, 165146, 161611, 154406, 108013, 86696, 82729, 77443, 101313, 101348, 116821, 151129, 179589, 189422, 192412, 104375, 53511, 74465, 70283, 77615, 83867, 41673, 35786, 11999, 11978, 0, 31156, 32827, 174147, 174967, 119274, 179383, 47920, 74891, 141230, ],
	[253622, 242281, 240291, 237719, 235006, 239325, 204384, 168425, 166476, 176880, 181243, 153328, 129722, 128877, 167142, 255611, 252435, 213240, 216997, 215187, 207927, 205413, 126717, 99489, 91646, 92031, 71431, 71466, 87037, 122406, 149720, 159553, 162543, 78216, 72507, 106804, 102622, 109954, 116207, 52543, 46657, 19157, 19562, 31156, 0, 6686, 168775, 169595, 113901, 174010, 77846, 85761, 173497, ],
	[255293, 243951, 241961, 239389, 236676, 240995, 206054, 170095, 168147, 143534, 182913, 154999, 131392, 130547, 168812, 262296, 259120, 219948, 223705, 221895, 214635, 212121, 133402, 106175, 98332, 98717, 78117, 78152, 82620, 118359, 145673, 155507, 158496, 71789, 79215, 113512, 109330, 116662, 122915, 54231, 48343, 23386, 20911, 32827, 6686, 0, 170446, 171266, 115571, 175680, 84554, 87431, 180183, ],
	[86887, 75546, 73556, 70984, 68271, 72589, 64355, 50668, 54261, 42358, 38525, 28823, 43246, 39890, 10487, 35893, 37259, 23749, 24566, 24628, 29511, 31462, 79731, 117603, 125157, 126740, 180658, 180691, 202940, 235901, 257871, 268440, 271430, 213566, 134330, 100205, 106813, 105445, 92293, 122551, 127080, 149618, 149598, 174147, 168775, 170446, 0, 820, 62942, 44005, 131786, 90702, 43793, ],
	[97704, 76366, 74376, 71804, 69091, 73409, 65175, 51488, 55081, 43178, 39345, 29643, 44066, 40710, 11307, 35073, 36439, 22929, 23746, 23808, 28691, 30642, 78911, 116783, 124337, 125920, 179838, 179871, 202120, 235081, 257051, 267620, 270610, 212746, 135150, 101025, 107633, 106265, 93113, 123371, 127900, 150438, 150418, 174967, 169595, 171266, 820, 0, 63762, 44825, 132606, 91522, 44613, ],
	[144003, 117314, 115324, 112752, 110039, 114358, 94832, 58709, 32307, 28556, 31991, 41215, 20079, 23044, 61280, 91531, 99086, 101732, 93292, 95126, 95846, 80107, 93210, 112049, 108070, 102784, 136179, 136215, 146787, 182156, 209470, 219303, 222293, 157413, 79457, 45332, 52161, 50572, 45268, 67676, 72206, 94744, 94723, 119274, 113901, 115571, 62942, 63762, 0, 64447, 76914, 35829, 72577, ],
	[81921, 70580, 68590, 66018, 63305, 67624, 32682, 9134, 15251, 25778, 24223, 15244, 42257, 38902, 41843, 62243, 65726, 66596, 67205, 67474, 72415, 80079, 115494, 153366, 160920, 162392, 195841, 195876, 206396, 241764, 269078, 278912, 281901, 217022, 139566, 105259, 111770, 110548, 104876, 127785, 132315, 154853, 154832, 179383, 174010, 175680, 44005, 44825, 64447, 0, 136793, 95938, 72786, ],
	[216349, 205008, 203018, 200446, 197733, 202052, 167178, 131055, 128889, 104876, 144144, 116339, 92733, 91888, 130153, 159799, 156623, 117583, 125065, 119530, 112624, 111931, 62397, 41080, 37114, 31828, 62261, 62296, 72816, 108184, 135499, 145332, 148321, 83442, 5582, 32105, 27923, 35254, 41507, 76105, 88583, 59675, 59654, 47920, 77846, 84554, 131786, 132606, 76914, 136793, 0, 47268, 98758, ],
	[175550, 164209, 162219, 159647, 156934, 161252, 126311, 90353, 88404, 63791, 103171, 75254, 51648, 50803, 89068, 155872, 159355, 103303, 99892, 101726, 97418, 86707, 64113, 82913, 78947, 73661, 106533, 106569, 120240, 155608, 182923, 192756, 195746, 130866, 49811, 15686, 22547, 19271, 16316, 31590, 44066, 66604, 66583, 74891, 85761, 87431, 90702, 91522, 35829, 95938, 47268, 0, 73533, ],
	[129464, 119508, 117518, 114945, 112232, 116551, 103152, 77806, 70741, 59198, 58577, 55322, 52883, 49525, 35387, 75046, 71897, 30308, 29369, 31203, 24387, 16184, 33715, 81733, 89287, 90871, 144788, 144822, 167070, 200032, 222001, 232570, 235560, 177696, 101413, 67225, 73735, 72513, 58799, 101960, 114421, 136959, 136938, 141230, 173497, 180183, 43793, 44613, 72577, 72786, 98758, 73533, 0, ],

    ]  # yapf: disable
    data['num_vehicles'] = 1
    data['depot'] = 0
    return data


def print_solution(manager, routing, solution):
    """Prints solution on console."""
    print('Objective: {} meters'.format(solution.ObjectiveValue()))
    index = routing.Start(0)
    plan_output = 'Route for vehicle 0:\n'
    route_distance = 0
    while not routing.IsEnd(index):
        plan_output += ' {}\t'.format(places[manager.IndexToNode(index)])
        previous_index = index
        index = solution.Value(routing.NextVar(index))
        cost = routing.GetArcCostForVehicle(previous_index, index, 0)
        miles = format(cost/metersToMiles, '.3f')
        plan_output += '{}\n'.format(miles)
        route_distance += cost
    plan_output += ' {}\n'.format(manager.IndexToNode(index))
    print(plan_output)
    plan_output += 'Route distance: {}meters\n'.format(route_distance)

def print_coords(manager, routing, solution):
    """Prints places on console."""
    index = routing.Start(0)
    plan_output = ""
    while not routing.IsEnd(index):
        plan_output += ' \'{}\',\n'.format(coords[manager.IndexToNode(index)])
        previous_index = index
        index = solution.Value(routing.NextVar(index))
    plan_output += ' \'{}\',\n'.format(coords[manager.IndexToNode(index)])
    print(plan_output)



def main():
    """Entry point of the program."""
    # Instantiate the data problem.
    data = create_data_model()

    # Create the routing index manager.
    manager = pywrapcp.RoutingIndexManager(len(data['distance_matrix']),
                                           data['num_vehicles'], data['depot'])

    # Create Routing Model.
    routing = pywrapcp.RoutingModel(manager)


    def distance_callback(from_index, to_index):
        """Returns the distance between the two nodes."""
        # Convert from routing variable Index to distance matrix NodeIndex.
        from_node = manager.IndexToNode(from_index)
        to_node = manager.IndexToNode(to_index)
        return data['distance_matrix'][from_node][to_node]

    transit_callback_index = routing.RegisterTransitCallback(distance_callback)

    # Define cost of each arc.
    routing.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)

    # Setting first solution heuristic.
    search_parameters = pywrapcp.DefaultRoutingSearchParameters()
    search_parameters.first_solution_strategy = (
        routing_enums_pb2.FirstSolutionStrategy.PATH_CHEAPEST_ARC)

    # Solve the problem.
    solution = routing.SolveWithParameters(search_parameters)

    # Print solution on console.
    if solution:
        print_solution(manager, routing, solution)
        print_coords(manager, routing, solution)


if __name__ == '__main__':
    main()
